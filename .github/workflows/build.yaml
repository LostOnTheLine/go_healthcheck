name: Semantic Release with Manual Trigger

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Select the type of release'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: patch

permissions:
  contents: write  # Needed to push tags and create releases

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get latest tag
        id: get_latest_tag
        run: |
          tag=$(git describe --abbrev=0 --tags 2>/dev/null || echo "v0.0.1")
          echo "latest_tag=$tag" >> $GITHUB_OUTPUT

      - name: Parse and increment version
        id: increment_version
        run: |
          echo "Latest tag: ${{ steps.get_latest_tag.outputs.latest_tag }}"
          TAG="${{ steps.get_latest_tag.outputs.latest_tag }}"
          RELEASE_TYPE="${{ github.event.inputs.release_type }}"

          # Remove 'v' prefix if present
          ver="${TAG#v}"

          # Split the version parts
          IFS='.' read -r major minor patch <<<"$ver"

          if [[ "$RELEASE_TYPE" == "major" ]]; then
            major=$((major + 1))
            minor=0
            patch=0
          elif [[ "$RELEASE_TYPE" == "minor" ]]; then
            minor=$((minor + 1))
            patch=0
          else
            patch=$((patch + 1))
          fi

          NEW_TAG="v$major.$minor.$patch"
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT
          echo "New tag: $NEW_TAG"

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Build static binary
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o healthcheck ./healthcheck.go

      - name: Configure Git for Tag Push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create and push tag
        run: |
          git tag "${{ steps.increment_version.outputs.new_tag }}"
          git push origin "${{ steps.increment_version.outputs.new_tag }}"

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.increment_version.outputs.new_tag }}
          name: Release ${{ steps.increment_version.outputs.new_tag }}
          body: |
            Automated release for tag ${{ steps.increment_version.outputs.new_tag }}.

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./healthcheck
          asset_name: healthcheck-linux-amd64
          asset_content_type: application/octet-stream
